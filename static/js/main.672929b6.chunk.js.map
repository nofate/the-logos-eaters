{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","menu","url","categories","name","preview","intro","Material","data","className","src","Home","id","go","fetchedUser","title","items","entries","value","push","getMaterials","osName","platform","Persik","props","left","onClick","data-to","IOS","width","height","App","useState","activePanel","setActivePanel","setUser","size","popout","setPopout","useEffect","a","connect","sendPromise","user","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,oC,6gBCYrCC,G,OAAO,CACT,CACIC,IAAK,0BACLC,WAAY,CAAC,UAAW,WACxBC,KAAM,0MACNC,QAAS,uCACTC,MAAO,+jFAEX,CACIJ,IAAK,2BACLC,WAAY,CAAC,MAAO,MACpBC,KAAM,0MACNC,QAAS,+GACTC,MAAO,m9BAKTC,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACI,yBAAKC,UAAU,WACX,yBAAKC,IAAKF,EAAKH,QAASI,UAAU,gBAElC,yBAAKA,UAAU,SACVD,EAAKF,SAyDPK,EApCF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,GAAyB,EAArBC,GAAqB,EAAjBC,YACnB,OACI,kBAAC,IAAD,CAAOF,GAAIA,GAWP,kBAAC,IAAD,CAAOG,MAAM,0IACT,kBAAC,IAAD,KA5BK,WACjB,IAAMC,EAAQ,GADS,uBAGvB,YAA6Bf,EAAKgB,UAAlC,+CAA6C,CAAC,IAAD,6BAA1BC,GAA0B,WACzCF,EAAMG,KAAK,kBAAC,EAAD,CAAUX,KAAMU,MAJR,kFAOvB,OACI,6BACKF,GAoBQI,O,4EC5DfC,G,cAASC,eAsBAC,EApBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOZ,GAAIY,EAAMZ,IAChB,kBAAC,IAAD,CACCa,KAAM,kBAAC,IAAD,CAAcC,QAASF,EAAMX,GAAIc,UAAQ,QAC7CN,IAAWO,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKnB,UAAU,WACd,4BAAQC,IAAI,2BAA2BmB,MAAM,OAAOC,OAAO,YCkB/CC,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVlB,EAFU,KAEGqB,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAHxC,mBAGVC,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAQC,YAAY,uBADxC,OACOC,EADP,OAECR,EAAQQ,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAQG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMtC,EAAY,EAAZA,KACpC,GAAa,yBAATsC,EAAiC,CACpC,IAAMC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgB7B,MAAQV,EAAK0C,OAAS1C,EAAK0C,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OALzB,mCAafO,KACE,IAEH,IAAMzC,EAAK,SAAA0C,GACVrB,EAAeqB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAMzB,YAAaA,EAAaI,OAAQA,GACvC,kBAAC,EAAD,CAAMzB,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MC5B3B4B,IAAQkB,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.672929b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nimport './Home.css';\n\nconst menu = [\n    {\n        url: \"https://luna-2.tass.ru/\",\n        categories: ['culture', 'history'],\n        name: \"Бестиарий: 10 эпических монстров России\",\n        preview: \"https://luna-2.tass.ru/shares/fb.png\",\n        intro: \"Начало освоению спутника Земли положила «Луна-2». В 1959 году советская станция стала первым искусственным аппаратом, достигшим поверхности Луны. После этого наступило время больших открытий: запуск первых автоматических станций, первый луноход и первая высадка человека на Луну. Потом полёты к Луне на некоторое время прекратились, но сейчас внимание человечества снова обращено к ней. Мы изучили все лунные миссии: от первого успеха «Луны-2» и программы Apollo до планов новых экспедиций и строительства лунных баз.\"\n    },\n    {\n        url: \"https://monstry.tass.ru/\",\n        categories: ['war', \"pi\"],\n        name: \"Бестиарий: 10 эпических монстров России\",\n        preview: \"https://rm-content.s3.amazonaws.com/57f773462aa31a0078116425/upload-72efc906-68ad-48eb-8e6e-872c2598c161.png\",\n        intro: \"Мы собрали чудовищ из разных регионов нашей страны. Они различаются по происхождению, среде обитания, внешнему виду и способностям. Единственное, что их объединяет, — колоссальные размеры.\"\n    }\n];\n\n\nconst Material = ({data}) => {\n    return (\n        <div className=\"preview\">\n            <img src={data.preview} className=\"preview-pic\"/>\n\n            <div className=\"intro\">\n                {data.intro}\n            </div>\n        </div>\n    )\n};\n\n\nconst getMaterials = () => {\n    const items = []\n\n    for (const [index, value] of menu.entries()) {\n        items.push(<Material data={value} />)\n    }\n\n    return (\n        <div>\n            {items}\n        </div>\n    );\n};\n\nconst Home = ({id, go, fetchedUser}) => {\n    return (\n        <Panel id={id}>\n            {/*{fetchedUser &&*/}\n            {/*<Group title=\"User Data Fetched with VK Connect\">*/}\n            {/*    <Cell*/}\n            {/*        before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}*/}\n            {/*        description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}*/}\n            {/*    >*/}\n            {/*        {`${fetchedUser.first_name} ${fetchedUser.last_name}`}*/}\n            {/*    </Cell>*/}\n            {/*</Group>}*/}\n\n            <Group title=\"Твоя подборка материалов\">\n                <Div>\n                    {getMaterials()}\n                </Div>\n            </Group>\n        </Panel>\n    )\n};\n\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<div className=\"overlay\">\n\t\t\t<iframe src=\"https://monstry.tass.ru/\" width=\"100%\" height=\"100%\"/>\n\t\t</div>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}