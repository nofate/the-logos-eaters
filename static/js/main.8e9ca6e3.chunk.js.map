{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","menu","url","categories","name","Material","title","size","level","onClick","window","open","Home","id","fetchedUser","go","before","photo_200","src","description","city","first_name","last_name","items","entries","value","push","getMaterials","osName","platform","Persik","props","left","data-to","IOS","className","width","height","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","connect","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,oC,klBCYrCC,G,OAAO,CACT,CACIC,IAAK,2BACLC,WAAY,CAAC,UAAW,WACxBC,KAAM,2MAEV,CACIF,IAAK,2BACLC,WAAY,CAAC,MAAO,MACpBC,KAAM,qFAKRC,EAAW,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOJ,EAAS,EAATA,IACtB,OACI,kBAAC,IAAD,CAAQK,KAAK,KAAKC,MAAM,IAAIC,QAAS,kBAAKC,OAAOC,KAAKT,EAAK,YACtDI,IAyDEM,EArCF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,GAAQC,GAAiB,EAArBC,GAAqB,EAAjBD,aACnB,OACI,kBAAC,IAAD,CAAOD,GAAIA,GACP,kBAAC,IAAD,gBACCC,GACD,kBAAC,IAAD,CAAOR,MAAM,qCACT,kBAAC,IAAD,CACIU,OAAQF,EAAYG,UAAY,kBAAC,IAAD,CAAQC,IAAKJ,EAAYG,YAAe,KACxEE,YAAaL,EAAYM,MAAQN,EAAYM,KAAKd,MAAQQ,EAAYM,KAAKd,MAAQ,IAFvF,UAIQQ,EAAYO,WAJpB,YAIkCP,EAAYQ,aAIlD,kBAAC,IAAD,CAAOhB,MAAM,sBACT,kBAAC,IAAD,KA7BK,WACjB,IAAMiB,EAAQ,GADS,uBAGvB,YAA6BtB,EAAKuB,UAAlC,+CAA6C,CAAC,IAAD,6BAA1BC,GAA0B,WACzCF,EAAMG,KAAK,kBAAC,EAAD,CAAUpB,MAAOmB,EAAMrB,KAAMF,IAAKuB,EAAMvB,QAJhC,kFAOvB,OACI,6BACKqB,GAqBQI,O,8DCrDfC,G,cAASC,eAsBAC,EApBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOlB,GAAIkB,EAAMlB,IAChB,kBAAC,IAAD,CACCmB,KAAM,kBAAC,IAAD,CAAcvB,QAASsB,EAAMhB,GAAIkB,UAAQ,QAC7CL,IAAWM,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,WACd,4BAAQjB,IAAI,2BAA2BkB,MAAM,OAAOC,OAAO,YCkB/CC,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVzB,EAFU,KAEG4B,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAehC,KAAK,WAHxC,mBAGVoC,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAQC,YAAY,uBADxC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAQG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACpC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgB7B,MAAQ4B,EAAKI,OAASJ,EAAKI,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OALzB,mCAafO,KACE,IAEH,IAAM9C,EAAK,SAAA+C,GACVrB,EAAeqB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAMzB,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAM9B,GAAG,OAAOC,YAAaA,EAAaC,GAAIA,IAC9C,kBAAC,EAAD,CAAQF,GAAG,SAASE,GAAIA,MC5B3BgC,IAAQmB,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.8e9ca6e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\nimport './Home.css';\n\nconst menu = [\n    {\n        url: \"https://monstry.tass.ru/\",\n        categories: ['culture', 'history'],\n        name: \"Бестиарий: 10 эпических монстров России\"\n    },\n    {\n        url: \"https://monstry.tass.ru/\",\n        categories: ['war', \"pi\"],\n        name: \"Монстры-убийцы\"\n    }\n];\n\n\nconst Material = ({title, url}) => {\n    return (\n        <Button size=\"xl\" level=\"2\" onClick={()=> window.open(url, \"_blank\")} >\n            {title}\n        </Button>\n    )\n};\n\n\nconst getMaterials = () => {\n    const items = []\n\n    for (const [index, value] of menu.entries()) {\n        items.push(<Material title={value.name} url={value.url}/>)\n    }\n\n    return (\n        <div>\n            {items}\n        </div>\n    );\n};\n\nconst Home = ({id, go, fetchedUser}) => {\n    return (\n        <Panel id={id}>\n            <PanelHeader>Example</PanelHeader>\n            {fetchedUser &&\n            <Group title=\"User Data Fetched with VK Connect\">\n                <Cell\n                    before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n                    description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n                >\n                    {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n                </Cell>\n            </Group>}\n\n            <Group title=\"Navigation Example\">\n                <Div>\n                    {getMaterials()}\n                </Div>\n            </Group>\n        </Panel>\n    )\n};\n\n\nHome.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<div className=\"overlay\">\n\t\t\t<iframe src=\"https://monstry.tass.ru/\" width=\"100%\" height=\"100%\"/>\n\t\t</div>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}